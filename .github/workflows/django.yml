# name: Django CI

# on:
#   push:
#     branches: ['main']
#   pull_request:
#     branches: ['main']

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     strategy:
#       max-parallel: 4
#       matrix:
#         python-version: [3.12.2]

#     steps:
#       - uses: actions/checkout@v4
#       - name: Set up Python ${{ matrix.python-version }}
#         uses: actions/setup-python@v3
#         with:
#           python-version: ${{ matrix.python-version }}
#       - name: Install Dependencies
#         run: |
#           python -m pip install --upgrade pip
#           pip install -r requirements.txt
#         working-directory: server
#       - name: Run Tests
#         run: |
#           python manage.py test
#         working-directory: server/weather_project
#       - name: Linting with Pylint
#         run: |
#           pylint *
#         working-directory: server/weather_project
#       - name: Coverage report
#         run: |
#           coverage run manage.py test
#           coverage report
#         working-directory: server/weather_project

# name: Django CI

# on:
#   push:
#     branches: ['main']
#   pull_request:
#     branches: ['main']

# jobs:
#   build:
#     runs-on: ubuntu-latest
#     steps:
#       -
#         name: Checkout
#         uses: actions/checkout@v4
#       -
#         name: Login to Docker Hub
#         uses: docker/login-action@v3
#         with:
#           username: ${{ secrets.DOCKERHUB_USERNAME }}
#           password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
#       -
#         name: Set up Docker Buildx
#         uses: docker/setup-buildx-action@v3
#       -
#         name: Build and push
#         uses: docker/build-push-action@v5
#         with:
#           context: ./server
#           file: ./server/Dockerfile
#           push: true
#           tags: ${{ secrets.DOCKERHUB_USERNAME }}/clockbox:latest

name: Django CI

on:
  push:
    branches: ['main']
  pull_request:
    branches: ['main']

jobs:
  build:
    runs-on: ubuntu-latest
    env:
      DB_NAME: ${{ secrets.DB_NAME }}
      DB_USER: ${{ secrets.DB_USER }}
      DB_PASSWORD: ${{ secrets.DB_PASSWORD }}
      DB_HOST: ${{ secrets.DB_HOST }}
      DB_PORT: ${{ secrets.DB_PORT }}
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Login to Docker Hub
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKER_HUB_ACCESS_TOKEN }}
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Build and push
        run: |
          docker-compose rm -f
          docker-compose pull
          docker-compose up --build -d
        #         docker-compose stop -t 1
        working-directory: .
      - name: Run pwd
        run: |
          pwd
          ls -la
          cat server/weather_project/weather_api/tests.py
      - name: Run Django tests
        run: |
          docker-compose run --rm server python server/weather_project/manage.py test
        working-directory: .


